---
import { Image } from 'astro:assets';

// Define what props the component accepts (filename, alt text, etc.)
interface Props {
  filename: string;
  alt: string;
  width?: number;
  height?: number;
  figNumber?: string;
  caption?: string;
}

const { filename, alt, width = 500, height = 500, figNumber, caption } = Astro.props;

// This is the logic you had before, now inside a component
const allImages = import.meta.glob('/src/content/blog/rdb-intro/assets/*.png');

// Construct the full path using the filename prop
const imagePath = `/src/content/blog/rdb-intro/assets/${filename}`;

let imageToRender = null;
if (allImages[imagePath]) {
  const imageModule = await allImages[imagePath]();
  imageToRender = (imageModule as any).default;
}
---

{imageToRender && (
  <figure>
    <Image
      src={imageToRender}
      {width}
      {height}
      alt={alt}
    />
    {figNumber && caption && (
      <figcaption>
      &lt; <strong>Fig {figNumber}</strong>. {caption} &gt;
      </figcaption>
    )}
  </figure>
)}

<style>
  figure {
    margin: 1.5rem 0; /* Add some space around the figure */
    padding: 0;
  }
  figcaption {
    text-align: center;
    margin-top: 0.5rem;
    font-size: 0.9em;
  }
</style>